{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerID","state","time","Date","toUTCString","slice","tick","newTime","setState","console","info","this","window","setInterval","prevProps","name","props","debug","clearInterval","className","React","Component","App","nameChangeTimer","lastRenameTime","hasClock","clockName","handleRightClick","event","preventDefault","handleLeftClick","newName","value","now","toString","getRandomName","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"8MAMMA,E,4MACJC,QAAyB,K,EAEzBC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,I,EAuB7CC,KAAO,WACL,IAAMC,GAAU,IAAIJ,MAAOC,cAAcC,OAAO,IAAK,GAErD,EAAKG,SAAS,CACZN,KAAMK,IAIRE,QAAQC,KAAKH,I,uDA5Bf,WAAqB,IAAD,OAClBI,KAAKX,QACHY,OAAOC,aAAY,kBAAM,EAAKP,SAAQ,O,gCAG1C,SAAmBQ,GACjB,IAAQC,EAASD,EAATC,KAEJA,IAASJ,KAAKK,MAAMD,MAEtBN,QAAQQ,MAAR,uBAA8BF,EAA9B,eAAyCJ,KAAKK,MAAMD,S,kCAIxD,WACuB,OAAjBJ,KAAKX,SACPkB,cAAcP,KAAKX,W,oBAevB,WACE,OACE,sBAAKmB,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BR,KAAKK,MAAMD,OAD3C,UAGE,sBAAMI,UAAU,cAAhB,SAA+BR,KAAKV,MAAMC,c,GA3C9BkB,IAAMC,WAiDXtB,I,UCxCTuB,E,4MAEJC,gBAAiC,K,EAEjCC,eAAgC,K,EAEhCvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,W,EAuBbC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,K,EAG5BK,gBAAkB,SAACF,GACjBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,K,uDA3B5B,WAAqB,IAAD,OAClBd,KAAKY,gBAAkBV,aAAY,WACjC,IAAMkB,EAnBZ,WACE,IAAMC,EAAQ7B,KAAK8B,MAAMC,WAAW7B,OAAO,GAE3C,MAAM,SAAN,OAAgB2B,GAgBIG,GAEhB,EAAK3B,SAAS,CAAEkB,UAAWK,MAC1B,MAEHK,SAASC,iBAAiB,cAAe1B,KAAKgB,kBAC9CS,SAASC,iBAAiB,QAAS1B,KAAKmB,mB,kCAG1C,WAC+B,OAAzBnB,KAAKY,iBACPL,cAAcP,KAAKY,iBAGrBa,SAASE,oBAAoB,cAAe3B,KAAKgB,kBACjDS,SAASE,oBAAoB,QAAS3B,KAAKmB,mB,oBAa7C,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCR,KAAKV,MAAMwB,UAAY,cAAC,EAAD,CAAOV,KAAMJ,KAAKV,MAAMyB,mB,GA7CtCN,IAAMC,WAmDTC,IC/DfiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.84686be0.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\nclass Clock extends React.Component<ClockProps> {\n  timerID: number | null = null;\n\n  state = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    this.timerID\n    = window.setInterval(() => this.tick(), 1000) as unknown as number;\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    const { name } = prevProps;\n\n    if (name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerID !== null) {\n      clearInterval(this.timerID);\n    }\n  }\n\n  tick = () => {\n    const newTime = new Date().toUTCString().slice(-12, -4);\n\n    this.setState({\n      time: newTime,\n    });\n\n    // eslint-disable-next-line no-console\n    console.info(newTime);\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <div className=\"Clock__name\">{this.props.name}</div>\n        time is\n        <span className=\"Clock__time\">{this.state.time}</span>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './Clock';\nimport './App.scss';\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nclass App extends React.Component\n  <{}, AppState> {\n  nameChangeTimer: number | null = null;\n\n  lastRenameTime: number | null = null;\n\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    this.nameChangeTimer = setInterval(() => {\n      const newName = getRandomName();\n\n      this.setState({ clockName: newName });\n    }, 3300) as unknown as number;\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentWillUnmount() {\n    if (this.nameChangeTimer !== null) {\n      clearInterval(this.nameChangeTimer);\n    }\n\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}